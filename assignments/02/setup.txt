1.) download ubuntu 18.04 as cloud image
	wget "https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img"

2.) create ssh key of host
	ssh-keygen -t rsa -b 4096 -C root

3.) copy the ssh public key
	PUBLIC_KEY=$(cat ~/.ssh/id_rsa.pub)

4.) create a cloud-init file with user credentials of guest vms
	cat >user-data <<EOF
#cloud-config
debug: true
users:
  - name: "root"
    plain_text_passwd: "root"
    shell: /bin/bash
    lock-passwd: False
    ssh_pwauth: True
    chpasswd: { expire: False }
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users, admin
    ssh_authorized_keys:
      - "${PUBLIC_KEY}"
final_message: "--------------The system is finally up!--------------"
EOF

5.) build two cloud-init images
	cloud-localds CLOUD-INIT1.iso user-data
	cloud-localds CLOUD-INIT2.iso user-data

A:) Qemu
	6.) create a virtual disk of size 5G called QEMU.img
		qemu-img create -b bionic-server-cloudimg-amd64.img -f qcow2 -F qcow2 QEMU.img 5G

	7.) start vm with all available cores and 2GB of memory
		qemu-system-x86_64 \
			-smp $(nproc) \
			-m 2048 \
			-hda QEMU.img \
			-hdb CLOUD-INIT1.iso \
			-net nic \
			-net user,hostfwd=tcp::2222-:22 \
			-nographic

	8.) access the vm via ssh
		ssh root@localhost -p 2222


B:) KVM
	6.) create a virtual disk of size 5G called KVM.img
		qemu-img create -b bionic-server-cloudimg-amd64.img -f qcow2 -F qcow2 KVM.img 5G

	7.) start vm with all available cores and 2GB of memory
		qemu-system-x86_64 \
			-smp $(nproc) \
			-m 2048 \
			-hda KVM.img \
			-hdb CLOUD-INIT2.iso \
			-net nic \
			-net user,hostfwd=tcp::2223-:22 \
			-enable-kvm \
			-nographic

	8.) access the vm via ssh
		ssh root@localhost -p 2223


software:
	qemu 6.1.0_1
